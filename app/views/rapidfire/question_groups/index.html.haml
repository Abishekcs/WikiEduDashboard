- content_for :after_title, ' â€“ Question Groups'

= render 'admin_header'
.container.survey__edit
  - # Extract all question group IDs from @question_groups
  - question_groups_id = @question_groups.pluck(:id)
  
  - # Group survey-question group mappings by question group ID
  - @survey_question_groups = SurveysQuestionGroup.where(rapidfire_question_group_id: question_groups_id).group_by(&:rapidfire_question_group_id)
  
  - # Fetch surveys linked to question groups, preload assignments, and group by survey ID
  - @surveys = Survey.includes(:survey_assignments).where(id: @survey_question_groups.values.flatten.map(&:survey_id).uniq).group_by(&:id)
  
  - # Group all questions by their question group ID
  - @rapidfire_questions = Rapidfire::Question.where(question_group_id: question_groups_id).group_by(&:question_group_id) 
  
  - # Get the latest version for each question group using PaperTrail versioning
  - @latest_question_groups_version = PaperTrail::Version.where(item_type: 'Rapidfire::QuestionGroup', item_id: question_groups_id).group_by(&:item_id).transform_values(&:last)

  - if @question_groups.length > 0
    %ul.list.survey__admin__row-container= render partial: "question_group", collection: @question_groups.reverse
  - else
    %p.light-text
      No Question Groups. #{link_to "Create One", new_question_group_path}
